version: "3.9"
services:
  app:
    &shop_app
    build:
      context: .
      dockerfile: Dockerfile
    command: gunicorn shop.wsgi:application --bind 0.0.0.0:8000
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  app_celery:
    <<: *shop_app
    command: celery --app shop worker
    env_file:
      - .env
    ports: []


  postgres:
    image: postgres:16.2-alpine3.19
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - ./pg_init:/docker-entrypoint-initdb.d
      - pg-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"

  redis:
    image: redis:7.2.4
    hostname: redis
    restart: always
    environment:
      ALLOW_EMPTY_PASSWORD: yes
    healthcheck:
      test: redis-cli ping
      interval: 1s
      timeout: 3s
      retries: 30
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:3.13.2-management
    ports:
      - "15672:15672"
      - "5672:5672"
    hostname: rabbitmq
    env_file:
      - .env
    restart: always
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3


volumes:
  pg-data:

  redis-data:

  rabbitmq-data: